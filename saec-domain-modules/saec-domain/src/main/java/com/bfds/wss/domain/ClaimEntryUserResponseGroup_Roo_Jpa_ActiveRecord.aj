// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bfds.wss.domain;

import com.bfds.wss.domain.ClaimEntryUserResponseGroup;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ClaimEntryUserResponseGroup_Roo_Jpa_ActiveRecord {
    
    @PersistenceContext(unitName = "entityManagerFactory")
    transient EntityManager ClaimEntryUserResponseGroup.entityManager;
    
    public static long ClaimEntryUserResponseGroup.countClaimEntryUserResponseGroups() {
        return entityManager().createQuery("SELECT COUNT(o) FROM ClaimEntryUserResponseGroup o", Long.class).getSingleResult();
    }
    
    public static List<ClaimEntryUserResponseGroup> ClaimEntryUserResponseGroup.findAllClaimEntryUserResponseGroups() {
        return entityManager().createQuery("SELECT o FROM ClaimEntryUserResponseGroup o", ClaimEntryUserResponseGroup.class).getResultList();
    }
    
    public static ClaimEntryUserResponseGroup ClaimEntryUserResponseGroup.findClaimEntryUserResponseGroup(Long id) {
        if (id == null) return null;
        return entityManager().find(ClaimEntryUserResponseGroup.class, id);
    }
    
    public static List<ClaimEntryUserResponseGroup> ClaimEntryUserResponseGroup.findClaimEntryUserResponseGroupEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM ClaimEntryUserResponseGroup o", ClaimEntryUserResponseGroup.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public ClaimEntryUserResponseGroup ClaimEntryUserResponseGroup.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        ClaimEntryUserResponseGroup merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
