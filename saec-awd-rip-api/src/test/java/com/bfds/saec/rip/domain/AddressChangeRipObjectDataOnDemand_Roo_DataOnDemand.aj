// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bfds.saec.rip.domain;

import com.bfds.saec.rip.domain.AddressChangeRipObject;
import com.bfds.saec.rip.domain.AddressChangeRipObjectDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect AddressChangeRipObjectDataOnDemand_Roo_DataOnDemand {
    
    declare @type: AddressChangeRipObjectDataOnDemand: @Component;
    
    private Random AddressChangeRipObjectDataOnDemand.rnd = new SecureRandom();
    
    private List<AddressChangeRipObject> AddressChangeRipObjectDataOnDemand.data;
    
    public AddressChangeRipObject AddressChangeRipObjectDataOnDemand.getNewTransientAddressChangeRipObject(int index) {
        AddressChangeRipObject obj = new AddressChangeRipObject();
        setBusinessUnit(obj, index);
        setCorrelationId(obj, index);
        setCreatedByUser(obj, index);
        setFromAddress1(obj, index);
        setFromAddress2(obj, index);
        setFromAddress3(obj, index);
        setFromAddress4(obj, index);
        setFromAddress5(obj, index);
        setFromAddress6(obj, index);
        setFromAddressType(obj, index);
        setFromCity(obj, index);
        setFromCountryCode(obj, index);
        setFromStateCode(obj, index);
        setFromZipCode(obj, index);
        setFromZipExt(obj, index);
        setHostName(obj, index);
        setReferenceNo(obj, index);
        setStatus(obj, index);
        setToAddress1(obj, index);
        setToAddress2(obj, index);
        setToAddress3(obj, index);
        setToAddress4(obj, index);
        setToAddress5(obj, index);
        setToAddress6(obj, index);
        setToAddressType(obj, index);
        setToCity(obj, index);
        setToCountryCode(obj, index);
        setToStateCode(obj, index);
        setToZipCode(obj, index);
        setToZipExt(obj, index);
        setWorkType(obj, index);
        return obj;
    }
    
    public void AddressChangeRipObjectDataOnDemand.setBusinessUnit(AddressChangeRipObject obj, int index) {
        String businessUnit = "businessUnit_" + index;
        obj.setBusinessUnit(businessUnit);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setCorrelationId(AddressChangeRipObject obj, int index) {
        Long correlationId = new Integer(index).longValue();
        obj.setCorrelationId(correlationId);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setCreatedByUser(AddressChangeRipObject obj, int index) {
        String createdByUser = "createdByUser_" + index;
        obj.setCreatedByUser(createdByUser);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromAddress1(AddressChangeRipObject obj, int index) {
        String fromAddress1 = "fromAddress1_" + index;
        obj.setFromAddress1(fromAddress1);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromAddress2(AddressChangeRipObject obj, int index) {
        String fromAddress2 = "fromAddress2_" + index;
        obj.setFromAddress2(fromAddress2);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromAddress3(AddressChangeRipObject obj, int index) {
        String fromAddress3 = "fromAddress3_" + index;
        obj.setFromAddress3(fromAddress3);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromAddress4(AddressChangeRipObject obj, int index) {
        String fromAddress4 = "fromAddress4_" + index;
        obj.setFromAddress4(fromAddress4);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromAddress5(AddressChangeRipObject obj, int index) {
        String fromAddress5 = "fromAddress5_" + index;
        obj.setFromAddress5(fromAddress5);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromAddress6(AddressChangeRipObject obj, int index) {
        String fromAddress6 = "fromAddress6_" + index;
        obj.setFromAddress6(fromAddress6);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromAddressType(AddressChangeRipObject obj, int index) {
        String fromAddressType = "fromAddressType_" + index;
        obj.setFromAddressType(fromAddressType);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromCity(AddressChangeRipObject obj, int index) {
        String fromCity = "fromCity_" + index;
        obj.setFromCity(fromCity);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromCountryCode(AddressChangeRipObject obj, int index) {
        String fromCountryCode = "fromCountryCode_" + index;
        obj.setFromCountryCode(fromCountryCode);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromStateCode(AddressChangeRipObject obj, int index) {
        String fromStateCode = "fromStateCode_" + index;
        obj.setFromStateCode(fromStateCode);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromZipCode(AddressChangeRipObject obj, int index) {
        String fromZipCode = "fromZipCode_" + index;
        obj.setFromZipCode(fromZipCode);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setFromZipExt(AddressChangeRipObject obj, int index) {
        String fromZipExt = "fromZipExt_" + index;
        obj.setFromZipExt(fromZipExt);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setHostName(AddressChangeRipObject obj, int index) {
        String hostName = "hostName_" + index;
        obj.setHostName(hostName);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setReferenceNo(AddressChangeRipObject obj, int index) {
        String referenceNo = "referenceNo_" + index;
        obj.setReferenceNo(referenceNo);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToAddress1(AddressChangeRipObject obj, int index) {
        String toAddress1 = "toAddress1_" + index;
        obj.setToAddress1(toAddress1);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToAddress2(AddressChangeRipObject obj, int index) {
        String toAddress2 = "toAddress2_" + index;
        obj.setToAddress2(toAddress2);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToAddress3(AddressChangeRipObject obj, int index) {
        String toAddress3 = "toAddress3_" + index;
        obj.setToAddress3(toAddress3);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToAddress4(AddressChangeRipObject obj, int index) {
        String toAddress4 = "toAddress4_" + index;
        obj.setToAddress4(toAddress4);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToAddress5(AddressChangeRipObject obj, int index) {
        String toAddress5 = "toAddress5_" + index;
        obj.setToAddress5(toAddress5);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToAddress6(AddressChangeRipObject obj, int index) {
        String toAddress6 = "toAddress6_" + index;
        obj.setToAddress6(toAddress6);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToAddressType(AddressChangeRipObject obj, int index) {
        String toAddressType = "toAddressType_" + index;
        obj.setToAddressType(toAddressType);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToCity(AddressChangeRipObject obj, int index) {
        String toCity = "toCity_" + index;
        obj.setToCity(toCity);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToCountryCode(AddressChangeRipObject obj, int index) {
        String toCountryCode = "toCountryCode_" + index;
        obj.setToCountryCode(toCountryCode);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToStateCode(AddressChangeRipObject obj, int index) {
        String toStateCode = "toStateCode_" + index;
        obj.setToStateCode(toStateCode);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToZipCode(AddressChangeRipObject obj, int index) {
        String toZipCode = "toZipCode_" + index;
        obj.setToZipCode(toZipCode);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setToZipExt(AddressChangeRipObject obj, int index) {
        String toZipExt = "toZipExt_" + index;
        obj.setToZipExt(toZipExt);
    }
    
    public void AddressChangeRipObjectDataOnDemand.setWorkType(AddressChangeRipObject obj, int index) {
        String workType = "workType_" + index;
        obj.setWorkType(workType);
    }
    
    public AddressChangeRipObject AddressChangeRipObjectDataOnDemand.getSpecificAddressChangeRipObject(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        AddressChangeRipObject obj = data.get(index);
        Long id = obj.getId();
        return AddressChangeRipObject.findAddressChangeRipObject(id);
    }
    
    public AddressChangeRipObject AddressChangeRipObjectDataOnDemand.getRandomAddressChangeRipObject() {
        init();
        AddressChangeRipObject obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return AddressChangeRipObject.findAddressChangeRipObject(id);
    }
    
    public boolean AddressChangeRipObjectDataOnDemand.modifyAddressChangeRipObject(AddressChangeRipObject obj) {
        return false;
    }
    
    public void AddressChangeRipObjectDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = AddressChangeRipObject.findAddressChangeRipObjectEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'AddressChangeRipObject' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<AddressChangeRipObject>();
        for (int i = 0; i < 10; i++) {
            AddressChangeRipObject obj = getNewTransientAddressChangeRipObject(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
