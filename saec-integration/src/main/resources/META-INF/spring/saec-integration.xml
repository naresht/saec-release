<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.1.xsd
		http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-2.0.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-2.1.xsd">


	<description>
		This is the core context for the enterprise integration flows.
		
		Inbound events should flow in via gateways as part of an existing transaction.
	</description>

	<int:annotation-config/>
	
	<!-- For reading updates from our queue asynchronously - overrides the default poller -->
	<int:poller default="true" fixed-rate="2000">
		<int:transactional/>
	</int:poller>
	

    <int:gateway  id="updateListener" service-interface="com.bfds.saec.integration.api.UpdateListener" />

	<int-jdbc:message-store id="jdbcStore" data-source="dataSource" />

	<int:channel id="updatesFromApp" >
		<int:queue message-store="jdbcStore"/> 
	</int:channel>	

</beans>
