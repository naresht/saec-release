// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bfds.saec.rip.domain;

import com.bfds.saec.rip.domain.StopReplaceCheckRipObject;
import com.bfds.saec.rip.domain.StopReplaceCheckRipObjectDataOnDemand;
import java.math.BigDecimal;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect StopReplaceCheckRipObjectDataOnDemand_Roo_DataOnDemand {
    
    declare @type: StopReplaceCheckRipObjectDataOnDemand: @Component;
    
    private Random StopReplaceCheckRipObjectDataOnDemand.rnd = new SecureRandom();
    
    private List<StopReplaceCheckRipObject> StopReplaceCheckRipObjectDataOnDemand.data;
    
    public StopReplaceCheckRipObject StopReplaceCheckRipObjectDataOnDemand.getNewTransientStopReplaceCheckRipObject(int index) {
        StopReplaceCheckRipObject obj = new StopReplaceCheckRipObject();
        setBusinessUnit(obj, index);
        setCorrelationId(obj, index);
        setCreatedByUser(obj, index);
        setGrossAmount(obj, index);
        setHostName(obj, index);
        setMailedDate(obj, index);
        setPaymentIdentificationNo(obj, index);
        setReferenceNo(obj, index);
        setRegistration1(obj, index);
        setRegistration2(obj, index);
        setRegistration3(obj, index);
        setRegistration4(obj, index);
        setRegistration5(obj, index);
        setRegistration6(obj, index);
        setStatus(obj, index);
        setWorkType(obj, index);
        return obj;
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setBusinessUnit(StopReplaceCheckRipObject obj, int index) {
        String businessUnit = "businessUnit_" + index;
        obj.setBusinessUnit(businessUnit);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setCorrelationId(StopReplaceCheckRipObject obj, int index) {
        Long correlationId = new Integer(index).longValue();
        obj.setCorrelationId(correlationId);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setCreatedByUser(StopReplaceCheckRipObject obj, int index) {
        String createdByUser = "createdByUser_" + index;
        obj.setCreatedByUser(createdByUser);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setGrossAmount(StopReplaceCheckRipObject obj, int index) {
        BigDecimal grossAmount = BigDecimal.valueOf(index);
        obj.setGrossAmount(grossAmount);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setHostName(StopReplaceCheckRipObject obj, int index) {
        String hostName = "hostName_" + index;
        obj.setHostName(hostName);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setMailedDate(StopReplaceCheckRipObject obj, int index) {
        String mailedDate = "mailedDate_" + index;
        obj.setMailedDate(mailedDate);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setPaymentIdentificationNo(StopReplaceCheckRipObject obj, int index) {
        String paymentIdentificationNo = "paymentIdentificationNo_" + index;
        obj.setPaymentIdentificationNo(paymentIdentificationNo);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setReferenceNo(StopReplaceCheckRipObject obj, int index) {
        String referenceNo = "referenceNo_" + index;
        obj.setReferenceNo(referenceNo);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setRegistration1(StopReplaceCheckRipObject obj, int index) {
        String registration1 = "registration1_" + index;
        obj.setRegistration1(registration1);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setRegistration2(StopReplaceCheckRipObject obj, int index) {
        String registration2 = "registration2_" + index;
        obj.setRegistration2(registration2);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setRegistration3(StopReplaceCheckRipObject obj, int index) {
        String registration3 = "registration3_" + index;
        obj.setRegistration3(registration3);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setRegistration4(StopReplaceCheckRipObject obj, int index) {
        String registration4 = "registration4_" + index;
        obj.setRegistration4(registration4);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setRegistration5(StopReplaceCheckRipObject obj, int index) {
        String registration5 = "registration5_" + index;
        obj.setRegistration5(registration5);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setRegistration6(StopReplaceCheckRipObject obj, int index) {
        String registration6 = "registration6_" + index;
        obj.setRegistration6(registration6);
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.setWorkType(StopReplaceCheckRipObject obj, int index) {
        String workType = "workType_" + index;
        obj.setWorkType(workType);
    }
    
    public StopReplaceCheckRipObject StopReplaceCheckRipObjectDataOnDemand.getSpecificStopReplaceCheckRipObject(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        StopReplaceCheckRipObject obj = data.get(index);
        Long id = obj.getId();
        return StopReplaceCheckRipObject.findStopReplaceCheckRipObject(id);
    }
    
    public StopReplaceCheckRipObject StopReplaceCheckRipObjectDataOnDemand.getRandomStopReplaceCheckRipObject() {
        init();
        StopReplaceCheckRipObject obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return StopReplaceCheckRipObject.findStopReplaceCheckRipObject(id);
    }
    
    public boolean StopReplaceCheckRipObjectDataOnDemand.modifyStopReplaceCheckRipObject(StopReplaceCheckRipObject obj) {
        return false;
    }
    
    public void StopReplaceCheckRipObjectDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = StopReplaceCheckRipObject.findStopReplaceCheckRipObjectEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'StopReplaceCheckRipObject' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<StopReplaceCheckRipObject>();
        for (int i = 0; i < 10; i++) {
            StopReplaceCheckRipObject obj = getNewTransientStopReplaceCheckRipObject(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
