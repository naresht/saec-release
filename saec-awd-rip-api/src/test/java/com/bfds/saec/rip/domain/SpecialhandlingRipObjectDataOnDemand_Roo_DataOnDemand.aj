// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bfds.saec.rip.domain;

import com.bfds.saec.rip.domain.SpecialhandlingRipObject;
import com.bfds.saec.rip.domain.SpecialhandlingRipObjectDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect SpecialhandlingRipObjectDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SpecialhandlingRipObjectDataOnDemand: @Component;
    
    private Random SpecialhandlingRipObjectDataOnDemand.rnd = new SecureRandom();
    
    private List<SpecialhandlingRipObject> SpecialhandlingRipObjectDataOnDemand.data;
    
    public SpecialhandlingRipObject SpecialhandlingRipObjectDataOnDemand.getNewTransientSpecialhandlingRipObject(int index) {
        SpecialhandlingRipObject obj = new SpecialhandlingRipObject();
        setAddress1(obj, index);
        setAddress2(obj, index);
        setAddress3(obj, index);
        setAddress4(obj, index);
        setAddress5(obj, index);
        setAddress6(obj, index);
        setBusinessUnit(obj, index);
        setCity(obj, index);
        setCorrelationId(obj, index);
        setCreatedByUser(obj, index);
        setHostName(obj, index);
        setReferenceNo(obj, index);
        setRegistration1(obj, index);
        setRegistration2(obj, index);
        setRegistration3(obj, index);
        setRegistration4(obj, index);
        setRegistration5(obj, index);
        setRegistration6(obj, index);
        setSpecialInstructions(obj, index);
        setStateCode(obj, index);
        setStatus(obj, index);
        setWorkType(obj, index);
        setZipCode(obj, index);
        setZipExt(obj, index);
        return obj;
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setAddress1(SpecialhandlingRipObject obj, int index) {
        String address1 = "address1_" + index;
        obj.setAddress1(address1);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setAddress2(SpecialhandlingRipObject obj, int index) {
        String address2 = "address2_" + index;
        obj.setAddress2(address2);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setAddress3(SpecialhandlingRipObject obj, int index) {
        String address3 = "address3_" + index;
        obj.setAddress3(address3);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setAddress4(SpecialhandlingRipObject obj, int index) {
        String address4 = "address4_" + index;
        obj.setAddress4(address4);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setAddress5(SpecialhandlingRipObject obj, int index) {
        String address5 = "address5_" + index;
        obj.setAddress5(address5);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setAddress6(SpecialhandlingRipObject obj, int index) {
        String address6 = "address6_" + index;
        obj.setAddress6(address6);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setBusinessUnit(SpecialhandlingRipObject obj, int index) {
        String businessUnit = "businessUnit_" + index;
        obj.setBusinessUnit(businessUnit);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setCity(SpecialhandlingRipObject obj, int index) {
        String city = "city_" + index;
        obj.setCity(city);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setCorrelationId(SpecialhandlingRipObject obj, int index) {
        Long correlationId = new Integer(index).longValue();
        obj.setCorrelationId(correlationId);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setCreatedByUser(SpecialhandlingRipObject obj, int index) {
        String createdByUser = "createdByUser_" + index;
        obj.setCreatedByUser(createdByUser);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setHostName(SpecialhandlingRipObject obj, int index) {
        String hostName = "hostName_" + index;
        obj.setHostName(hostName);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setReferenceNo(SpecialhandlingRipObject obj, int index) {
        String referenceNo = "referenceNo_" + index;
        obj.setReferenceNo(referenceNo);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setRegistration1(SpecialhandlingRipObject obj, int index) {
        String registration1 = "registration1_" + index;
        obj.setRegistration1(registration1);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setRegistration2(SpecialhandlingRipObject obj, int index) {
        String registration2 = "registration2_" + index;
        obj.setRegistration2(registration2);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setRegistration3(SpecialhandlingRipObject obj, int index) {
        String registration3 = "registration3_" + index;
        obj.setRegistration3(registration3);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setRegistration4(SpecialhandlingRipObject obj, int index) {
        String registration4 = "registration4_" + index;
        obj.setRegistration4(registration4);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setRegistration5(SpecialhandlingRipObject obj, int index) {
        String registration5 = "registration5_" + index;
        obj.setRegistration5(registration5);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setRegistration6(SpecialhandlingRipObject obj, int index) {
        String registration6 = "registration6_" + index;
        obj.setRegistration6(registration6);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setSpecialInstructions(SpecialhandlingRipObject obj, int index) {
        String specialInstructions = "specialInstructions_" + index;
        obj.setSpecialInstructions(specialInstructions);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setStateCode(SpecialhandlingRipObject obj, int index) {
        String stateCode = "stateCode_" + index;
        obj.setStateCode(stateCode);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setWorkType(SpecialhandlingRipObject obj, int index) {
        String workType = "workType_" + index;
        obj.setWorkType(workType);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setZipCode(SpecialhandlingRipObject obj, int index) {
        String zipCode = "zipCode_" + index;
        obj.setZipCode(zipCode);
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.setZipExt(SpecialhandlingRipObject obj, int index) {
        String zipExt = "zipExt_" + index;
        obj.setZipExt(zipExt);
    }
    
    public SpecialhandlingRipObject SpecialhandlingRipObjectDataOnDemand.getSpecificSpecialhandlingRipObject(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        SpecialhandlingRipObject obj = data.get(index);
        Long id = obj.getId();
        return SpecialhandlingRipObject.findSpecialhandlingRipObject(id);
    }
    
    public SpecialhandlingRipObject SpecialhandlingRipObjectDataOnDemand.getRandomSpecialhandlingRipObject() {
        init();
        SpecialhandlingRipObject obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return SpecialhandlingRipObject.findSpecialhandlingRipObject(id);
    }
    
    public boolean SpecialhandlingRipObjectDataOnDemand.modifySpecialhandlingRipObject(SpecialhandlingRipObject obj) {
        return false;
    }
    
    public void SpecialhandlingRipObjectDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = SpecialhandlingRipObject.findSpecialhandlingRipObjectEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'SpecialhandlingRipObject' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<SpecialhandlingRipObject>();
        for (int i = 0; i < 10; i++) {
            SpecialhandlingRipObject obj = getNewTransientSpecialhandlingRipObject(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
