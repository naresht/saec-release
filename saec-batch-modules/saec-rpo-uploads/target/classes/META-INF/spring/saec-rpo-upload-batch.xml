<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	<job id="awdRpoUploadJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="jdbcInRPOJobStep" xmlns="http://www.springframework.org/schema/batch">
			<tasklet transaction-manager="transactionManager"
				start-limit="100" allow-start-if-complete="true">
				<chunk reader="rpoItemReader" writer="rpoItemWriter"
					commit-interval="100">
				</chunk>
			</tasklet>
		</step>
	</job>

	<bean id="rpoItemReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="fetchSize" value="3000" />
		<property name="useSharedExtendedConnection" value="false" />
		<property name="dataSource" ref="awdDataSource" />
		<property name="sql">
			<value><![CDATA[
			select ec.unitcd as Unitcd, ec.wrktype as Worktype, 
			'100' as SAECReference, ps27.SSNO as SSN, ps27.AMTV as CheckAmount, ps27.CKNM 
			as CheckNumber, ps27.MLID as MailControlNumber
				from
				(
				select min(wc1.enddattim) as minenddattim, wa5.key_date, wa5.key_time, 
				wa5.key_milsec, wa5.recordcd, wa5.crnode, wa5.wrktype, wa5.unitcd
				from wc1u999s wc1 join wa5u999s wa5
				on wc1.key_date = wa5.key_date and wc1.key_time = wa5.key_time and 
				wc1.key_milsec = wa5.key_milsec and wc1.recordcd = wa5.recordcd and 
				wc1.crnode = wa5.crnode and wc1.event_dattim = wa5.event_dattim
				where wa5.wrktype in ('FORWARDCHK','FRWRDNOCHK','NOFORWDCHK','NONFORWARD') 
				and wa5.statcd = 'SCANNED'
				group by wa5.key_date, wa5.key_time, wa5.key_milsec, wa5.recordcd, wa5.crnode, wa5.wrktype, wa5.unitcd
	 			) ec
				join ps027pf ps27
				on ec.key_date = ps27.key_date and ec.key_time = ps27.key_time and
				ec.key_milsec =	ps27.key_milsec and ec.recordcd = ps27.recordcd and
				ec.crnode =	ps27.crnode where Unitcd = ? and ps27.key_date >= ? 
				]]></value>
		</property>
		<property name="preparedStatementSetter">
			<bean class="com.bfds.saec.rpo.dao.RpoPreparedStatementSetter">
				<property name="daysToLookBack" value="30" />
			</bean>
		</property>
		<property name="rowMapper">
			<bean class="com.bfds.saec.rpo.dto.AwdRpoRowMapper" />
		</property>
	</bean>

	<bean id="rpoItemWriter" class="com.bfds.saec.rpo.dao.RpoItemWriter">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

</beans>